# Prepare packages
list.of.packages <- c("stringr", "lubridate", "tidyverse", "rjags","jagsUI", "coda","parallel","doParallel", "foreach", "here", "MCMCvis", "ggplot2", "ggridges", "jagshelper", "GGally", "patchwork", "gridExtra", "ggpubr", "rphylopic", "ggdist", "corrplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}
lapply(list.of.packages, require, character.only = TRUE)

# Load and prepare data 
# # Band-recovery marrays
# load(file="data/MALL_marray.rda")
# load(file="data/MALL_release.rda")
# 
# # old marray
# MALL.release <- readRDS('data/MALL_release.rda')
# MALL.marray <- readRDS('data/MALL_marray.rda')
# 
# # subset to years 1992-2020
# MALL.marray <- MALL.marray[33:nrow(MALL.marray), 33:ncol(MALL.marray),,]
# MALL.release <- MALL.release[33:nrow(MALL.release),,]

# new marray
MALL.marray <- readRDS('data/MALL_marray_new.rda')
MALL.release <- readRDS('data/MALL_release_new.rda')

# MALL.marray.new <- MALL.marray.new[33:nrow(MALL.marray.new), 33:ncol(MALL.marray.new),,]
# MALL.release.new <- MALL.release.new[33:nrow(MALL.release.new),,] # MALL.release and MALL.release.new are the same

MALL.marray <- MALL.marray[46:nrow(MALL.marray), 46:ncol(MALL.marray),,]
MALL.release <- MALL.release[46:nrow(MALL.release),,]

# Differences in # of recoveries between old and new data
#MALL.marray.diff <- MALL.marray-MALL.marray.new

# # Green-winged Teal
AGWT.release <- readRDS(file = "data/AGWT_release_new.rda")
AGWT.marray <- readRDS(file = "data/AGWT_marray_new.rda")

# # Subset to 1992-2020
AGWT.release <- AGWT.release[2:nrow(AGWT.release),,]
AGWT.marray <- AGWT.marray[2:nrow(AGWT.marray), 2:ncol(AGWT.marray),,]
 
# # Northern Pintail
# NOPI.release <- readRDS(file = "data/NOPI_release.rda")
# NOPI.marray <- readRDS(file = "data/NOPI_marray.rda")
# NOPI.release <- NOPI.release[2:nrow(NOPI.release),,]
# NOPI.marray <- NOPI.marray[2:nrow(NOPI.marray), 2:ncol(NOPI.marray),,]

# Bpop estimates (divided by 10,000)
y_esa <- readRDS(file = "data/MALL_ESA_Bpop.rda") # Eastern survey area
y_tsa <- readRDS(file = "data/MALL_TSA_Bpop.rda") # Traditional survey area

y_esa <- readRDS(file = "data/AGWT_ESA_Bpop.rda")
y_tsa <- readRDS(file = "data/AGWT_TSA_Bpop.rda")

#nopi.bpop <- readRDS(file = "data/NOPI_Bpop_Counts.rda")
#y_tot <- c(nopi.bpop$Counts, NA)

# replace NAs with 0 for y_esa for summing
y_esa[is.na(y_esa)] <- 0

# Add estimates from both survey areas
y_tot <- y_esa + y_tsa

# Subset for years 1992-2020
y_tot <- y_tot[2:(length(y_tot)-1)]
# y_tot <- y_tot[15:(length(y_tot)-1)]

# load wing data (females)
jf.wing <- readRDS(file = "data/MALL_juv_female_wing.rda")
female.wing <- readRDS(file = "data/MALL_all_female_wing.rda")

jf.wing <- readRDS(file = "data/agwt_juv_female_wing.rda")
female.wing <- readRDS(file = "data/agwt_all_female_wing.rda")

#jf.wing <- readRDS(file = "Data/nopi_juv_female_wing.rda")
# #female.wing <- readRDS(file = "Data/nopi_all_female_wing.rda")
# 
# # subset to year 1992-2020
jf.wing <- jf.wing[2:(nrow(jf.wing)-1),]
female.wing <- female.wing[2:(nrow(female.wing)-1),]

# Subset to 2005-2020
jf.wing <- jf.wing[15:(nrow(jf.wing)-1),]
female.wing <- female.wing[15:(nrow(female.wing)-1),]

# Load environmental covariates
envi_cov <- readRDS("data/envi_cov.rda")
# standardize precipitation in southern states
prcp <- (envi_cov$avg_prcp-mean(envi_cov$avg_prcp))/sd(envi_cov$avg_prcp)
# standardize average # of days where max temp below freezing from mid-latitude cities
dx32 <- (envi_cov$avg_dx32_ml-mean(envi_cov$avg_dx32_ml))/sd(envi_cov$avg_dx32_ml)
# standardize NAO
nao <- (envi_cov$Mean.nao-mean(envi_cov$Mean.nao))/sd(envi_cov$Mean.nao)

# May pond count estimates in thousands (1992-2019)
ponds <- c(3608.9, 3611.7, 5984.8, 6335.4, 7482.2, 7458.2, 4586.9, 6704.3, 3946.9, 4640.4, 2720.0, 5190.1, 3919.6, 5381.2, 6093.9, 7002.7, 4431.4, 6434.0, 6665.0, 8132.2, 5544.0, 6891.7, 7181.2, 6307.7, 5012.5, 6096.0, 5227.4, 4990.3)

# subset ponds to 2005-2019
# ponds <- ponds[14:length(ponds)]
ponds.std <- (ponds-mean(ponds))/sd(ponds) # standardize


# Bundle data
nyrs <- dim(MALL.marray)[1]
nClass <- dim(MALL.marray)[4]
nyrs <- dim(AGWT.marray)[1]
nClass <- dim(AGWT.marray)[4]
year <- (1:nyrs-nyrs/2)

bugs.data <- list(nyrs=dim(AGWT.marray)[1], 
                  #pre-hunting band-recoveries (2005-2020)
                  recovmat.am = AGWT.marray[,,2,3], recovmat.af = AGWT.marray[,,2,4], recovmat.jm = AGWT.marray[,,2,1], recovmat.jf = AGWT.marray[,,2,2]
                  #post-hunting band-recoveries (calendar year 1993-2020)
                  , recovmatP.am = AGWT.marray[2:nyrs,2:(nyrs+1),1,3], recovmatP.af = AGWT.marray[2:nyrs,2:(nyrs+1),1,4], recovmatP.jm = AGWT.marray[2:nyrs,2:(nyrs+1),1,1], recovmatP.jf = AGWT.marray[2:nyrs,2:(nyrs+1),1,2]
                  #pre-hunting total bandings
                  , relmat.am = AGWT.release[,2,3], relmat.af = AGWT.release[,2,4], relmat.jm = AGWT.release[,2,1], relmat.jf = AGWT.release[,2,2]
                  #post-hunting total bandings
                  , relmatP.am = AGWT.release[2:nyrs,1,3], relmatP.af = AGWT.release[2:nyrs,1,4], relmatP.jm = AGWT.release[2:nyrs,1,1], relmatP.jf = AGWT.release[2:nyrs,1,2]
                  # wing data
                  , W.jv = jf.wing$Number, W.tot = female.wing$sum
                  #Bpop estimates
                  , y_t = y_tot
                  , begin.esa.year = min(which(y_esa!=0))
                  # envi cov
                  # , prcp = prcp[15:length(prcp)], dx32 = dx32[15:length(dx32)]
                  #, nao = nao[15:length(nao)]
                  , prcp = prcp[2:length(prcp)], dx32 = dx32[2:length(dx32)]
                  # , nao = nao[2:length(nao)]
                  , ponds = c(ponds.std[1:length(ponds.std)],NA)
                  , prev.prcp = prcp[1:(length(prcp)-1)], prev.dx32 = dx32[1:(length(dx32)-1)]
                  # , prev.nao = nao[1:(length(nao)-1)]
                  # , prev.prcp = prcp[14:(length(prcp)-1)], prev.dx32 = dx32[14:(length(dx32)-1)]
                  #, prev.nao = nao[14:(length(nao)-1)]
                  #, year = year
                  #var-cov matrix
                  #, R.S = R.S, df = df#, R.N = R.N, df.N = df.N
)

# bugs.data <- list(nyrs=dim(NOPI.marray)[1], 
#                   #pre-hunting band-recoveries (1992-2020)
#                   recovmat.am = NOPI.marray[,,2,3], recovmat.af = NOPI.marray[,,2,4], recovmat.jm = NOPI.marray[,,2,1], recovmat.jf = NOPI.marray[,,2,2]
#                   #post-hunting band-recoveries (calendar year 1993-2020)
#                   , recovmatP.am = NOPI.marray[2:nyrs,2:(nyrs+1),1,3], recovmatP.af = NOPI.marray[2:nyrs,2:(nyrs+1),1,4], recovmatP.jm = NOPI.marray[2:nyrs,2:(nyrs+1),1,1], recovmatP.jf = NOPI.marray[2:nyrs,2:(nyrs+1),1,2]
#                   #pre-hunting total bandings
#                   , relmat.am = NOPI.release[,2,3], relmat.af = NOPI.release[,2,4], relmat.jm = NOPI.release[,2,1], relmat.jf = NOPI.release[,2,2]
#                   #post-hunting total bandings
#                   , relmatP.am = NOPI.release[2:nyrs,1,3], relmatP.af = NOPI.release[2:nyrs,1,4], relmatP.jm = NOPI.release[2:nyrs,1,1], relmatP.jf = NOPI.release[2:nyrs,1,2]
#                   # wing data
#                   , W.jv = jf.wing$Number, W.tot = female.wing$sum
#                   #Bpop estimates
#                   , y_t = y_tot#, begin.esa.year = min(which(y_esa!=0))
#                   # envi cov
#                   #, prcp = prcp[2:length(prcp)], dx32 = dx32[2:length(dx32)], nao = envi_cov$Mean.nao
#                   , ponds = c(ponds.std,NA)
#                   , prev.prcp = prcp[1:length(prcp)-1], prev.dx32 = dx32[1:length(dx32)-1], prev.nao = nao[1:length(nao)-1]
#                   #var-cov matrix
#                   #, R.S = R.S, df = df#, R.N = R.N, df.N = df.N
#                   )

# Initial values
inits <- function(){list(f.am=runif(nyrs,0,0.5),f.af=runif(nyrs,0,0.5),f.jm=runif(nyrs,0,0.5),f.jf=runif(nyrs,0,0.5)
                         , beta = rnorm(1, 0, 1)
                         , n_HY_mal = runif(1, 0, 50), n_AHY_mal = runif(1, 0, 50), n_HY_fem = runif(1, 0, 50), n_AHY_fem = runif(1, 0, 50)
                          , alpha_prcp = rnorm(4, 0, 0.37), alpha_dx32 = rnorm(4, 0, 0.37)
                         #, alpha_nao = rnorm(4, 0, 0.37)
                         #, alpha_t = rnorm(1, 0, 0.37)
                         , beta_pond = rnorm(1, 0, 0.01), beta_prcp = rnorm(1, 0, 0.01), beta_dx32 = rnorm(1, 0, 0.01)
                         #, beta_nao = rnorm(1, 0, 0.01)
                          ,gamma_prcp = rnorm(4, 0, 0.37), gamma_dx32 = rnorm(4, 0, 0.37)
                         #, gamma_nao = rnorm(4, 0, 0.37)
                         #, gamma_t = rnorm(1, 0, 0.37)
                         
                         # 
   )}     #, esp = runif(dim(MALL.marray)[1], 0.5, 0.6), mean.IntS = rnorm(8, 0, 1) #mean.IntH = rnorm(4, 0, 1), mean.IntN = rnorm(4, 0, 1)#,delta = dgamma(1, 60, 1), S_a.sd = runif(nClass, 0, 0.05),,
# , mean.H.am = rnorm(1, 0, 2),mean.H.af = rnorm(1, 0, 2),mean.H.jm = rnorm(1, 0, 2),mean.H.jf = rnorm(1, 0, 2)
# , sd.H.am = rgamma(1, 6, 1), sd.H.af = rgamma(1, 2, 1),sd.H.jm = gamma(1, 6, 1),sd.H.jf = rgamma(1, 2, 1)
# , mean.PH.am = rnorm(1, 0, 2),mean.PH.af = rnorm(1, 0, 2),mean.PH.jm = rnorm(1, 0, 2),mean.PH.jf = rnorm(1, 0, 2)
# , sd.PH.am = rgamma(1, 6, 1), sd.PH.af = rgamma(1, 2, 1),sd.PH.jm = rgamma(1, 6, 1),sd.PH.jf = rgamma(1, 2, 1)

# Parameters
parameters <- c("SH.am", "SN.am", "SH.af", "SN.af", "SH.jm", "SN.jm", "SH.jf", "SN.jf", "S.am", "S.af", "S.jm", "S.jf", "f.am", "f.af", "f.jm", "f.jf","R", "v", "q",  "N_tot", "N_HY_fem", "N_AHY_fem", "N_HY_mal", "N_AHY_mal", "sig.t", "sd.R", "beta", "delta", "lambda","beta_pond", "beta_prcp", "beta_dx32"
                , "muH.am", "muH.af", "muH.jm", "muH.jf", "muN.am", "muN.af", "muN.jm", "muN.jf"
                , "alpha_prcp", "gamma_prcp"
                , "alpha_dx32", "gamma_dx32"
                #, 'alpha_nao', 'gamma_nao', "beta_nao"
                #, "alpha_t", 'gamma_t'
)
                #,"mean.H.am", "mean.H.af", "mean.PH.am", "mean.PH.af", "sd.H.am", "sd.H.af", "sd.PH.am", "sd.PH.af")# "alpha_t", "gamma_t",""mean.H.jm","mean.H.jf", ""mean.PH.jm","mean.PH.jf",  "sd.H.jm", "sd.H.jf", , "sd.PH.jm", "sd.PH.jf"

# MCMC settings
ni <- 50000
nt <- 1
nb <- 25000
nc <- 3
na <- 1000

# Run JAGS

# Full IPM with all covs
agwt.ipm <- jagsUI(bugs.data, inits=inits, parameters, "Waterfowl_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

agwt.ipm2 <- update(agwt.ipm, n.iter = 10000, n.thin = nt, parallel = T, verbose = T)

plotRhats(agwt.ipm)

MCMCtrace(agwt.ipm, ind = TRUE, params = c('beta_pond', 'beta_dx32','beta_prcp', 'gamma_dx32',  'gamma_prcp', 'alpha_prcp', 'alpha_dx32', 'sig.t', 'sd.R'), iter = 25000)# 'muH.af', 'muH.jf', 'muN.af', 'muN.jf', 'muH.am', 'muH.jm', 'muN.am', 'muN.jm', 



MCMCtrace(agwt.ipm2, file = 'agwt_IPM_trace.pdf', params = c('N_tot', 'N_HY_fem', 'N_AHY_fem', 'N_HY_mal', 'N_AHY_mal'), iter = 25000)
MCMCtrace(agwt.ipm, file = 'agwt_IPM_trace.pdf', params = c('all'), iter = 10000)

saveRDS(agwt.ipm, 'output/agwt_ipm_1992_2020_output.rda')
#saveRDS(agwt.ipm, "output/agwt_ipm_2005-2020_output.rda")

# new data
mall.ipm <- jagsUI(bugs.data, inits=inits, parameters, "Waterfowl_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm2 <- update(mall.ipm, n.iter = 25000, n.thin = nt, parallel = T, verbose = T)
mall.ipm3 <- update(mall.ipm2, n.iter = 25000, n.thin = nt, parallel = T, verbose = T)
mall.ipm4 <- update(mall.ipm3, n.iter = 25000, n.thin = nt, parallel = T, verbose = T)

plotRhats(mall.ipm4)

MCMCtrace(mall.ipm3, file = 'mall_IPM_trace.pdf', params = c('all'), iter = 25000)

MCMCtrace(mall.ipm4, file = "mall_trace_coveff.pdf", ind = TRUE, params = c('beta_pond', 'beta_dx32',  'beta_prcp', 'gamma_dx32', 'gamma_prcp', 'alpha_prcp', 'alpha_dx32'), iter = 25000)

saveRDS(mall.ipm4, "output/mall_ipm_2005-2020_output.rda")

mall.ipm.5 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.6 <- update(mall.ipm.5, n.iter = 50000, n.thin = nt, parallel = T, verbose = T)

mall.ipm.7 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

# time-varying intercepts
mall.ipm.8 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.9 <- update(mall.ipm.8, n.iter = 50000, n.thin = nt, parallel = T, verbose = T)

saveRDS(mall.ipm.9, "mall_ipm_output_new_dat_mu_t.rda")

# time trend for all cohorts
mall.ipm.10 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.11 <- update(mall.ipm.10, n.iter = 50000, n.thin = nt, parallel = T, verbose = T)
mall.ipm.12 <- update(mall.ipm.11, n.iter = 100000, n.thin = nt, parallel = T, verbose = T)

# time trend on all but adult male cohort
mall.ipm.13 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

# time trend on juvenile cohorts only

mall.ipm.14 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.15 <- update(mall.ipm.14, n.iter = 50000, n.thin = nt, parallel = T, verbose = T)

MCMCplot(mall.ipm.14, params = c('alpha_prcp', 'alpha_dx32', 'alpha_nao', 'gamma_prcp', 'gamma_dx32', 'gamma_nao'
                                ))
MCMCplot(mall.ipm.14, params = c('beta_prcp', 'beta_nao', 'beta_dx32', 'beta_pond'))

mall.ipm.14 <- readRDS("mall_ipm_output_new_dat_juv_time_trend.rda")

# subset data to 2005-2020. hierarchical random effects structure

mall.ipm.16 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.16, "mall_ipm_output_2005-2020_hier_raneff.rda")

# subset data to 2010-2020 with hierarchical random effects structure

mall.ipm.17 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.18 <- update(mall.ipm.17, n.iter = 50000, n.thin = nt, parallel = T, verbose = T)

# 2005-2020 data. time-varying intercept for survival for all cohorts
mall.ipm.19 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)


# 2005-2020 data. time-varying intercept for survival for cohorts and adding prcp as cov for adults
mall.ipm.20 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.20.1 <- update(mall.ipm.20, n.iter = 20000, n.thin = nt, parallel = T, verbose = T)

# 2005-2020 data. Time-varying intercept for survival for juvs (fixed year effect). Random intercept for adults (random year effect). Include prcp as cov for adults
mall.ipm.21 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.21, "output/mall_ipm_21_output.rda")

# 2005-2020 data. Time-varying intercept for all cohorts except for juv male. Include prcp and dx32 as cov for all but juv male. Include constant intercept and time trend for juv male only
mall.ipm.22 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.22, "output/mall_ipm_22_output.rda")

# 2005-2020 data. Time-varying intercept for all cohorts. Include prcp and dx32 as cov for all but juv male. 
mall.ipm.23 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.23, 'output/mall_ipm_23_output.rda')

# MCMCplot(mall.ipm.9, params = c('mean.H.jm', 'mean.H.jf', 'mean.H.am', 'mean.H.af', 'mean.PH.jm', 'mean.PH.jf', 'mean.PH.am', 'mean.PH.af',
#                                 'sd.H.jm', 'sd.H.jf', 'sd.H.am', 'sd.H.af', 'sd.PH.jm', 'sd.PH.jf', 'sd.PH.am', 'sd.PH.af'
# ))


# MCMCplot(mall.ipm, params = c('mean.H.jm', 'mean.H.jf', 'mean.H.am', 'mean.H.af', 'mean.PH.jm', 'mean.PH.jf', 'mean.PH.am', 'mean.PH.af', 'sd.H.jm', 'sd.H.jf', 'sd.H.am', 'sd.H.af', 'sd.PH.jm', 'sd.PH.jf', 'sd.PH.am', 'sd.PH.af'
# ))

MCMCtrace(mall.ipm, iter = 50000, filename = 'mall_ipm_23_cov_traceplot.pdf', params  = c('alpha_prcp', 'alpha_dx32', 'gamma_prcp', 'gamma_dx32', 'beta_prcp', 'beta_dx32', 'beta_pond'
))

MCMCtrace(mall.ipm, iter = 50000, filename = 'mall_ipm_23_af_muH_muN_traceplot.pdf', params  = c('muN.af', 'muH.af'))
MCMCtrace(mall.ipm, iter = 50000, filename = 'mall_ipm_23_am_muH_muN_traceplot.pdf', params  = c('muN.am', 'muH.am'))
MCMCtrace(mall.ipm, iter = 50000, filename = 'mall_ipm_23_jf_muH_muN_traceplot.pdf', params  = c('muN.jf', 'muH.jf'))
MCMCtrace(mall.ipm, iter = 50000, filename = 'mall_ipm_23_jm_muH_muN_traceplot.pdf', params  = c('muN.jm', 'muH.jm'))



# traceplot(mall.ipm.6, parameters = c('mean.H.jm', 'mean.H.jf', 'mean.H.am', 'mean.H.af', 'mean.PH.jm', 'mean.PH.jf', 'mean.PH.am', 'mean.PH.af',
#                                      'sd.H.jm', 'sd.H.jf', 'sd.H.am', 'sd.H.af', 'sd.PH.jm', 'sd.PH.jf', 'sd.PH.am', 'sd.PH.af'
# ))

MCMCplot(agwt.ipm, params = c('alpha_prcp', 'alpha_dx32', 'gamma_prcp', 'gamma_dx32', 'beta_prcp', 'beta_dx32', 'beta_pond'))

# original data
# mall.ipm.1 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
# mall.ipm.2 <- update(mall.ipm.1, n.iter = 10000, n.thin = nt, parallel = T, verbose = T)
# 
# saveRDS(mall.ipm.1, "output/mall_ipm_output_orig_dat.rda")
# saveRDS(mall.ipm.4, "output/mall_ipm_output_new_dat.rda")
# saveRDS(mall.ipm.6, 'output/mall_ipm_output_new_dat_4.rda')


# cor.sd.mean <- cor(cbind(
#     mean.H.af = mall.ipm.21$sims.list$mean.H.af, sd.H.af = mall.ipm.21$sims.list$sd.H.af,
#     mean.H.am = mall.ipm.21$sims.list$mean.H.am, sd.H.am = mall.ipm.21$sims.list$sd.H.am,
    #mean.H.jf = mall.ipm.21$sims.list$mean.H.jf, sd.H.jf = mall.ipm.21$sims.list$sd.H.jf,
    #mean.H.jm = mall.ipm.21$sims.list$mean.H.jm, sd.H.jm = mall.ipm.21$sims.list$sd.H.jm,
    # mean.PH.af = mall.ipm.21$sims.list$mean.PH.af, sd.PH.af = mall.ipm.21$sims.list$sd.PH.af,
    # mean.PH.am = mall.ipm.21$sims.list$mean.PH.am, sd.PH.am = mall.ipm.21$sims.list$sd.PH.am
    #mean.PH.jf = mall.ipm.21$sims.list$mean.PH.jf, sd.PH.jf = mall.ipm.21$sims.list$sd.PH.jf,
    #mean.PH.jm = mall.ipm.21$sims.list$mean.PH.jm, sd.PH.jm = mall.ipm.21$sims.list$sd.PH.jm,
#    ))

cov.tab <- data.frame(cbind(mall.ipm.16$sims.list$alpha_prcp, mall.ipm.16$sims.list$alpha_dx32, mall.ipm.16$sims.list$alpha_nao
                     , mall.ipm.16$sims.list$gamma_prcp, mall.ipm.16$sims.list$gamma_dx32, mall.ipm.16$sims.list$gamma_nao
                     , mall.ipm.16$sims.list$beta_prcp, mall.ipm.16$sims.list$beta_dx32, mall.ipm.16$sims.list$beta_nao, mall.ipm.16$sims.list$beta_pond
                     ))
colnames(cov.tab) <- c('alpha_prcp_jm', 'alpha_prcp_jf', 'alpha_prcp_am', 'alpha_prcp_af'
                       , 'alpha_dx32_jm', 'alpha_dx32_jf', 'alpha_dx32_am', 'alpha_dx32_af'
                       , 'alpha_nao_jm', 'alpha_nao_jf', 'alpha_nao_am', 'alpha_nao_af' 
                       , 'gamma_prcp_jm', 'gamma_prcp_jf', 'gamma_prcp_am', 'gamma_prcp_af'
                       , 'gamma_dx32_jm', 'gamma_dx32_jf', 'gamma_dx32_am', 'gamma_dx32_af'
                       , 'gamma_nao_jm', 'gamma_nao_jf', 'gamma_nao_am', 'gamma_nao_af' 
                       ,'beta_prcp', 'beta_dx32', 'beta_nao', 'beta_pond'
                       )
cov.cor <- cor(cov.tab)

cor.jm <- cor(cbind(
  #muH.jm = mall.ipm.16$sims.list$muH.jm
              #, muN.jm = mall.ipm.16$sims.list$muN.jm
  mean.H.jm = mall.ipm.16$sims.list$mean.H.jm, sd.H.jm = mall.ipm.16$sims.list$sd.H.jm
              , mean.PH.jm = mall.ipm.16$sims.list$mean.PH.jm, sd.PH.jm = mall.ipm.16$sims.list$sd.PH.jm
              , alpha_prcp.jm = mall.ipm.16$sims.list$alpha_prcp[,3]
              , alpha_dx32.jm = mall.ipm.16$sims.list$alpha_dx32[,3]
              , alpha_nao.jm = mall.ipm.16$sims.list$alpha_nao[,3]
              , alpha_t.jm = mall.ipm.16$sims.list$alpha_t[,1]
              , gamma_prcp.jm = mall.ipm.16$sims.list$gamma_prcp[,3]
              , gamma_dx32.jm = mall.ipm.16$sims.list$gamma_dx32[,3]
              , gamma_nao.jm = mall.ipm.16$sims.list$gamma_nao[,3]
              , gamma_t.jm = mall.ipm.16$sims.list$gamma_t[,1]
              ))
cor.jf <- cor(cbind(
  #muH.jf = mall.ipm.16$sims.list$muH.jf
                    #, muN.jf = mall.ipm.16$sims.list$muN.jf
  mean.H.jf = mall.ipm.16$sims.list$mean.H.jf, sd.H.jf = mall.ipm.16$sims.list$sd.H.jf
  , mean.PH.jf = mall.ipm.16$sims.list$mean.PH.jf, sd.PH.jf = mall.ipm.16$sims.list$sd.PH.jf
                    , alpha_prcp.jf = mall.ipm.16$sims.list$alpha_prcp[,4]
                    , alpha_dx32.jf = mall.ipm.16$sims.list$alpha_dx32[,4]
                    , alpha_nao.jf = mall.ipm.16$sims.list$alpha_nao[,4]
                    , alpha_t.jf = mall.ipm.16$sims.list$alpha_t[,2]
                    , gamma_prcp.jf = mall.ipm.16$sims.list$gamma_prcp[,4]
                    , gamma_dx32.jf = mall.ipm.16$sims.list$gamma_dx32[,4]
                    , gamma_nao.jf = mall.ipm.16$sims.list$gamma_nao[,4]
                    , gamma_t.jf = mall.ipm.16$sims.list$gamma_t[,2]
))

cor.muH.am <- cor(cbind(
  muH.am = mall.ipm$sims.list$muH.am
  #, muN.am = mall.ipm.16$sims.list$muN.am
  # mean.H.am = mall.ipm.16$sims.list$mean.H.am, sd.H.am = mall.ipm.16$sims.list$sd.H.am
  # , mean.PH.am = mall.ipm.16$sims.list$mean.PH.am, sd.PH.am = mall.ipm.16$sims.list$sd.PH.am
  , alpha_prcp.am = mall.ipm$sims.list$alpha_prcp[,1]
  , alpha_dx32.am = mall.ipm$sims.list$alpha_dx32[,1]
  #, alpha_nao.am = mall.ipm.16$sims.list$alpha_nao[,1]
  #, alpha_t.am = mall.ipm.16$sims.list$alpha_t[,2]
  #, gamma_prcp.am = mall.ipm.16$sims.list$gamma_prcp[,1]
  #, gamma_dx32.am = mall.ipm.16$sims.list$gamma_dx32[,1]
  #, gamma_nao.am = mall.ipm.16$sims.list$gamma_nao[,1]
  #, gamma_t.am = mall.ipm.16$sims.list$gamma_t[,2]
))
cor.muN.am <- cor(cbind(
  #muH.am = mall.ipm$sims.list$muH.am
   muN.am = mall.ipm$sims.list$muN.am
  # mean.H.am = mall.ipm.16$sims.list$mean.H.am, sd.H.am = mall.ipm.16$sims.list$sd.H.am
  # , mean.PH.am = mall.ipm.16$sims.list$mean.PH.am, sd.PH.am = mall.ipm.16$sims.list$sd.PH.am
  #, alpha_prcp.am = mall.ipm.16$sims.list$alpha_prcp[,1]
  #, alpha_dx32.am = mall.ipm.16$sims.list$alpha_dx32[,1]
  #, alpha_nao.am = mall.ipm.16$sims.list$alpha_nao[,1]
  #, alpha_t.am = mall.ipm.16$sims.list$alpha_t[,2]
  , gamma_prcp.am = mall.ipm$sims.list$gamma_prcp[,1]
  , gamma_dx32.am = mall.ipm$sims.list$gamma_dx32[,1]
  #, gamma_nao.am = mall.ipm.16$sims.list$gamma_nao[,1]
  #, gamma_t.am = mall.ipm.16$sims.list$gamma_t[,2]
))

cor.muH.af <- cor(cbind(
  muH.af = mall.ipm$sims.list$muH.af
  , alpha_prcp.af = mall.ipm$sims.list$alpha_prcp[,2]
  , alpha_dx32.af = mall.ipm$sims.list$alpha_dx32[,2]

))
cor.muN.af <- cor(cbind(
  muN.af = mall.ipm$sims.list$muN.af
  , gamma_prcp.af = mall.ipm$sims.list$gamma_prcp[,2]
  , gamma_dx32.af = mall.ipm$sims.list$gamma_dx32[,2]
))

cor.muH.jf <- cor(cbind(
  muH.af = mall.ipm$sims.list$muH.jf
  , alpha_prcp.jf = mall.ipm$sims.list$alpha_prcp[,3]
  , alpha_dx32.jf = mall.ipm$sims.list$alpha_dx32[,3]
  
))
cor.muN.jf <- cor(cbind(
  muN.af = mall.ipm$sims.list$muN.jf
  , gamma_prcp.jf = mall.ipm$sims.list$gamma_prcp[,3]
  , gamma_dx32.jf = mall.ipm$sims.list$gamma_dx32[,3]
))
corrplot(cor.muH.am, method = "number")
corrplot(cor.muN.am, method = "number")
corrplot(cor.muH.af, method = "number")
corrplot(cor.muN.af, method = "number")

corrplot(cor.muH.jf, method = "number")
corrplot(cor.muN.jf, method = "number")

cor.af <- cor(cbind(
  #muH.af = mall.ipm.16$sims.list$muH.af
  #, muN.af = mall.ipm.16$sims.list$muN.af
  mean.H.af = mall.ipm.16$sims.list$mean.H.af, sd.H.af = mall.ipm.16$sims.list$sd.H.af
  , mean.PH.af = mall.ipm.16$sims.list$mean.PH.af, sd.PH.af = mall.ipm.16$sims.list$sd.PH.af
  , alpha_prcp.af = mall.ipm.16$sims.list$alpha_prcp[,2]
  , alpha_dx32.af = mall.ipm.16$sims.list$alpha_dx32[,2]
  , alpha_nao.af = mall.ipm.16$sims.list$alpha_nao[,2]
  #, alpha_t.af = mall.ipm.16$sims.list$alpha_t[,2]
  , gamma_prcp.af = mall.ipm.16$sims.list$gamma_prcp[,2]
  , gamma_dx32.af = mall.ipm.16$sims.list$gamma_dx32[,2]
  , gamma_nao.af = mall.ipm.16$sims.list$gamma_nao[,2]
  #, gamma_t.am = mall.ipm.16$sims.list$gamma_t[,2]
))

cor.muH.am <- cor(mall.ipm.16$sims.list$muH.am)
cor.muH.af <- cor(mall.ipm.16$sims.list$muH.af)
cor.muH.jm <- cor(mall.ipm.16$sims.list$muH.jm)
cor.muH.jf <- cor(mall.ipm.16$sims.list$muH.jf)
cor.muN.am <- cor(mall.ipm.16$sims.list$muN.am)
cor.muN.af <- cor(mall.ipm.16$sims.list$muN.af)
cor.muN.jm <- cor(mall.ipm.16$sims.list$muN.jm)
cor.muN.jf <- cor(mall.ipm.16$sims.list$muN.jf)
cor.muN.muH.am <- cor(mall.ipm.16$sims.list$muH.am, mall.ipm.16$sims.list$muN.am)
cor.muN.muH.af <- cor(mall.ipm.16$sims.list$muH.af, mall.ipm.16$sims.list$muN.af)
cor.muN.muH.jm <- cor(mall.ipm.16$sims.list$muH.jm, mall.ipm.16$sims.list$muN.jm)
cor.muN.muH.jf <- cor(mall.ipm.16$sims.list$muH.jf, mall.ipm.16$sims.list$muN.jf)

corrplot(cor.muN.muH.am, method = "number")
corrplot(cor.muN.muH.af, method = "number")
corrplot(cor.jm, method = "number")
corrplot(cor.jf, method = "number")
corrplot(cor.am, method = "number")
corrplot(cor.af, method = "number")
corrplot(cov.cor, method = "number", number.cex = 0.5)
corrplot(cor.muH.am, method = "number", number.cex = 0.5)
corrplot(cor.muH.af, method = "number", number.cex = 0.5)
corrplot(cor.muH.jm, method = 'number', number.cex = 0.5)
corrplot(cor.muH.jf, method = 'number', number.cex = 0.5)
corrplot(cor.muN.am, method = "number", number.cex = 0.5)
corrplot(cor.muN.af, method = "number", number.cex = 0.5)
corrplot(cor.muN.jm, method = 'number', number.cex = 0.5)
corrplot(cor.muN.jf, method = 'number', number.cex = 0.5)
corrplot(cor.sd.mean, method = 'number', number.cex = 0.5)


# Grab specific parameter output from models

grab <- function(ipm, param){
  out <- ipm$summary
  param.table <- data.frame(out[grep(param, rownames(out)),])
  min <- param.table[which.min(param.table$mean),]
  max <- param.table[which.max(param.table$mean),]
  print(min)
  print(max)
}

grab(mall.ipm.cov, "lambda")

## plotting results
# Load output from previous model runs
mall.ipm <- mall.ipm4 # readRDS("output/mall_ipm_2005-2020_output.rda")
agwt.ipm <- readRDS("output/agwt_ipm_1992_2020_output.rda")

#agwt.ipm <- readRDS("output/agwt_ipm_2005-2020_output.rda")

cbbPalette <- c("#E69F00","#009E73", "#CC79A7","#F0E442", "#0072B2", "#D55E00")

# custom plot theme
theme_ipm <- function(){ theme(
  axis.text.x = element_text(size = 5, angle = 45, vjust = 1, hjust=1),
  axis.text.y = element_text(size = 5),
  #axis.title= element_blank(),
  plot.title = element_text(size=6, hjust = 0.5),
  #legend.position = "none",
  #legend.position = "bottom",
  #legend.title = element_text( size = 18),
  #legend.text = element_text(size = 16),
  text = element_text(size = 7),
  panel.background = element_rect(fill = "white", colour = "white",
                                  linewidth = 0.5, linetype = "solid"),
  panel.grid.major = element_line(linewidth = 0.2, linetype = 'solid',
                                  colour = "lightgrey"),
  panel.border = element_blank(),
  axis.line = element_line(colour = "black", linewidth = 0.2),
  legend.position = "bottom"
  )
}

# phylopic
mall.id <- get_uuid(name = "Anas platyrhynchos", n = 1)
mall.img <- pick_phylopic(name = "Anas platyrhynchos", n = 1)
agwt.id <- get_uuid(name = "Anas crecca", n = 1)
agwt.img <- pick_phylopic(name = "Anas crecca", n = 1)

# Data frame with both hunting and post-hunting survival
mall.h.ph <- data.frame(cbind(Year = rep(c(2005:2020), 8), 
                              Class = rep(rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(mall.ipm$mean$R)), 2), 
                              Season = rep(c("Fall/Winter", "Spring/Summer"), each = 64 #116
                                           ), 
                              Mean = c(mall.ipm$mean$SH.jm, NA, mall.ipm$mean$SH.jf, NA, mall.ipm$mean$SH.am, NA, mall.ipm$mean$SH.af, NA, NA, mall.ipm$mean$SN.jm, NA, mall.ipm$mean$SN.jf, NA, mall.ipm$mean$SN.am, NA, mall.ipm$mean$SN.af), 
                              Lower = c(mall.ipm$q2.5$SH.jm, NA, mall.ipm$q2.5$SH.jf, NA, mall.ipm$q2.5$SH.am, NA, mall.ipm$q2.5$SH.af, NA, NA, mall.ipm$q2.5$SN.jm, NA, mall.ipm$q2.5$SN.jf, NA, mall.ipm$q2.5$SN.am, NA, mall.ipm$q2.5$SN.af), 
                              Upper = c(mall.ipm$q97.5$SH.jm, NA, mall.ipm$q97.5$SH.jf, NA, mall.ipm$q97.5$SH.am, NA, mall.ipm$q97.5$SH.af, NA, NA, mall.ipm$q97.5$SN.jm, NA, mall.ipm$q97.5$SN.jf, NA, mall.ipm$q97.5$SN.am, NA, mall.ipm$q97.5$SN.af)))

mall.h.ph <- mall.h.ph %>% 
                mutate_at(c("Mean", "Lower", "Upper"), as.numeric)

#plot mallard seasonal survivals
ggplot(mall.h.ph, aes(x = Year, y = Mean, group = Season)) +
  geom_pointrange(aes(ymin = Lower, ymax = Upper, color = Season), size = 0.2, alpha = 0.75, position=position_dodge(width=0.35)) +
  theme_ipm() +
  scale_color_manual(values=c("royalblue3", "firebrick3"))+ 
  ylab("Survival probability") +
  scale_x_discrete(breaks = seq(1992, 2020, by = 2)) +
  facet_wrap(~Class)
# save plot
ggsave("figures/mall_seasonal_survivals_2005_2020.jpg", units="cm", width=10, height=10, dpi=600)

# green-winged teal seasonal survival data frame
agwt.h.ph <- data.frame(cbind(Year = rep(c(1992:2020), 8), 
                              Class = rep(rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(agwt.ipm$mean$R)), 2), 
                              Season = rep(c("Fall/Winter", "Spring/Summer"), each = 116), 
                              Mean = c(agwt.ipm$mean$SH.jm, NA, agwt.ipm$mean$SH.jf, NA, agwt.ipm$mean$SH.am, NA, agwt.ipm$mean$SH.af, NA, NA, agwt.ipm$mean$SN.jm, NA, agwt.ipm$mean$SN.jf, NA, agwt.ipm$mean$SN.am, NA, agwt.ipm$mean$SN.af), 
                              Lower = c(agwt.ipm$q2.5$SH.jm, NA, agwt.ipm$q2.5$SH.jf, NA, agwt.ipm$q2.5$SH.am, NA, agwt.ipm$q2.5$SH.af, NA, NA, agwt.ipm$q2.5$SN.jm, NA, agwt.ipm$q2.5$SN.jf, NA, agwt.ipm$q2.5$SN.am, NA, agwt.ipm$q2.5$SN.af), 
                              Upper = c(agwt.ipm$q97.5$SH.jm, NA, agwt.ipm$q97.5$SH.jf, NA, agwt.ipm$q97.5$SH.am, NA, agwt.ipm$q97.5$SH.af, NA, NA, agwt.ipm$q97.5$SN.jm, NA, agwt.ipm$q97.5$SN.jf, NA, agwt.ipm$q97.5$SN.am, NA, agwt.ipm$q97.5$SN.af)))

agwt.h.ph <- agwt.h.ph %>% 
  mutate_at(c("Mean", "Lower", "Upper"), as.numeric)

# plot green-winged teal seasonal survivals
ggplot(agwt.h.ph, aes(x = Year, y = Mean, group = Season)) +
  geom_pointrange(aes(ymin = Lower, ymax = Upper, color = Season), size = 0.01, alpha = 0.75, position=position_dodge(width=0.35)) +
  theme_ipm() +
  scale_color_manual(values=c("royalblue3", "firebrick3"))+ 
  ylab("Survival probability") +
  scale_x_discrete(breaks = seq(1992, 2020, by = 2)) +
  facet_wrap(~Class)

# save plot
ggsave("figures/agwt_seasonal_survivals_new_1992_2020.jpg", units="cm", width=10, height=10, dpi=600)

# adult and juvenile annual survival
S.a.mall.out <- data.frame(cbind(Year = rep(c(2005:2019),4), 
                 Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(2005:2019)), 
                 Mean = c(mall.ipm$mean$S.jm, mall.ipm$mean$S.jf, mall.ipm$mean$S.am, mall.ipm$mean$S.af), 
                 Lower = c(mall.ipm$q2.5$S.jm, mall.ipm$q2.5$S.jf,mall.ipm$q2.5$S.am, mall.ipm$q2.5$S.af), 
                 Upper = c(mall.ipm$q97.5$S.jm, mall.ipm$q97.5$S.jf, mall.ipm$q97.5$S.am, mall.ipm$q97.5$S.af)))

S.a.mall.out <- S.a.mall.out %>% 
  mutate_at(c('Mean', 'Lower', 'Upper'), as.numeric)

mall.a.plot <- ggplot(S.a.mall.out, aes(x = Year, y = Mean, group = Class)) +
  #geom_point(aes(color = Class)) +
  geom_pointrange(aes(ymin = Lower, ymax = Upper, color = Class),size = 0.01, alpha = 0.75) +
  theme_ipm() +
  theme(legend.position = "none") +
  ylab("Annual survival") +
  ylim(0,1) +
  scale_color_manual(values=cbbPalette) +
  scale_x_discrete(breaks = seq(1992, 2019, by = 2)) +
  facet_wrap(~Class)

ggsave("figures/mall_annual_survival_plot_2005_2019.jpg", units="cm", width=10, height=10, dpi=600)


S.a.agwt.out <- data.frame(cbind(Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each= length(1992:2019)), Year = rep(1992:2019, 4), S_a.mean = c(agwt.ipm$mean$S.jm, agwt.ipm$mean$S.jf, agwt.ipm$mean$S.am, agwt.ipm$mean$S.af), S_a.lower = c(agwt.ipm$q2.5$S.jm, agwt.ipm$q2.5$S.jf,agwt.ipm$q2.5$S.am, agwt.ipm$q2.5$S.af), S_a.upper = c(agwt.ipm$q97.5$S.jm, agwt.ipm$q97.5$S.jf, agwt.ipm$q97.5$S.am, agwt.ipm$q97.5$S.af)))

S.a.agwt.out <- S.a.agwt.out %>% 
  mutate_at(c('S_a.mean', 'S_a.lower', 'S_a.upper'), as.numeric)

agwt.a.plot <- ggplot(S.a.agwt.out, aes(x = Year, y = S_a.mean, group = Class)) +
  #geom_point(aes(color = Class)) +
  geom_pointrange(aes(ymin = S_a.lower, ymax = S_a.upper, color = Class),size = 0.01,alpha = 0.75,position=position_dodge(width=0.35)) +
  theme_ipm() +
  theme(legend.position = "none") +
  ylab("") +
  ylim(0,1) +
  scale_x_discrete(breaks = seq(1992, 2019, by = 2)) +
  scale_color_manual(values=cbbPalette) + 
  facet_wrap(~Class)

ggsave("figures/agwt_annual_survival_plot_new_1992_2019.jpg", units="cm", width=10, height=10, dpi=600)

ggarrange(mall.a.plot, agwt.a.plot, ncol=2, legend="none") + theme(plot.margin = margin(0.1,0.2,0.2,0.2, "cm")) 


# recovery probabilities
mall.f.out <- data.frame(cbind(Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(2005:2020)), Year = rep(2005:2020, 4), f.mean = c(mall.ipm$mean$f.jm, mall.ipm$mean$f.jf, mall.ipm$mean$f.am, mall.ipm$mean$f.af), f.lower = c(mall.ipm$q2.5$f.jm, mall.ipm$q2.5$f.jf, mall.ipm$q2.5$f.am, mall.ipm$q2.5$f.af), f.upper = c(mall.ipm$q97.5$f.jm, mall.ipm$q97.5$f.jf, mall.ipm$q97.5$f.am, mall.ipm$q97.5$f.af)))

mall.f.out <- mall.f.out %>% 
                mutate_at(c('f.mean', 'f.lower', 'f.upper'), as.numeric)


mall.recov.plot <- ggplot(mall.f.out, aes(x = Year, y = f.mean, group = Class)) +
                    geom_pointrange(aes(ymin = f.lower, ymax = f.upper, color = Class), size = 0.01, alpha = 0.7) +
                    ylab("Recovery probability") +
  add_phylopic(img = mall.img, color = "black", x = 15, y = 0.225, ysize = 1) +
  scale_color_manual(values=cbbPalette)+ 
  ylim(0, 0.25) +
  xlab("") +
  guides(color=guide_legend(nrow=1)) +
  theme_ipm()

agwt.f.out <- data.frame(cbind(Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(1992:2020)), Year = rep(1992:2020, 4), f.mean = c(agwt.ipm$mean$f.jm, agwt.ipm$mean$f.jf, agwt.ipm$mean$f.am, agwt.ipm$mean$f.af), f.lower = c(agwt.ipm$q2.5$f.jm, agwt.ipm$q2.5$f.jf, agwt.ipm$q2.5$f.am, agwt.ipm$q2.5$f.af), f.upper = c(agwt.ipm$q97.5$f.jm, agwt.ipm$q97.5$f.jf, agwt.ipm$q97.5$f.am, agwt.ipm$q97.5$f.af)))

agwt.f.out <- agwt.f.out %>% 
  mutate_at(c('f.mean', 'f.lower', 'f.upper'), as.numeric)


agwt.recov.plot <- ggplot(agwt.f.out, aes(x = Year, y = f.mean, group = Class)) +
  geom_pointrange(aes(ymin = f.lower, ymax = f.upper, color = Class), size = 0.01, alpha = 0.7) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  add_phylopic(img = agwt.img, color = "black", x = 27, y = 0.08, ysize = 1.85) +
  ylab("Recovery probability") +
  xlab("") +
  scale_color_manual(values=cbbPalette)+ 
  ylim(0, 0.1) +
  guides(color=guide_legend(nrow=1)) +
  theme_ipm()


mall.recov.plot / agwt.recov.plot + plot_layout(guides = "collect", widths = 1.5, heights = unit(c(3, 3), 'cm')) & theme(legend.position = 'bottom')

ggsave("figures/recovery_prob_plot_both.jpg", units="cm", width=10, height=10, dpi=600)
# ggsave("figures/agwt_recovery_plot_new_1992_2020.jpg", units="cm", width=10, height=10, dpi=600)

# age ratio

theme_recruit <- function(){ theme(
  axis.text.x = element_text(size = 5, angle = 60, vjust = 0.5, hjust = 0.5),
  axis.text.y = element_text(size = 5),
  #plot.title = element_text(size=16, hjust = 0.5),
  text = element_text(size = 6),
  panel.background = element_blank(),
  panel.border = element_blank(),
  axis.line = element_line(colour = "black"), 
  legend.position = "bottom",
  legend.margin = margin(0,0,0,0),
  legend.box.margin = margin(0,0,0,0)
)
}
sp.col <- c("Dark green", "Chocolate4")

R.out <- data.frame(cbind(Year = 1992:2020, Species = rep(c("Mallard", "Green-winged Teal"), each = length(agwt.ipm$mean$R)), R.mean = c(rep(NA, 13),mall.ipm$mean$R, agwt.ipm$mean$R), R.lower = c(rep(NA, 13),mall.ipm$q2.5$R, agwt.ipm$q2.5$R), R.upper = c(rep(NA, 13),mall.ipm$q97.5$R, agwt.ipm$q97.5$R)))

R.out <- R.out %>% 
  mutate_at(c('R.mean', 'R.lower', 'R.upper'), as.numeric)


R.plot <- ggplot(R.out, aes(x = Year, y = R.mean, group = Species, fill = Species)) +
  add_phylopic(img = agwt.img, color = "black", x = 27, y = 6, ysize = 1.9) +
  add_phylopic(img = mall.img, color = "black", x = 27, y = 0.3, ysize = 1.6) +
  geom_line(aes(color = Species), size = 0.5) +
  geom_ribbon(aes(ymin = R.lower, ymax = R.upper), alpha = 0.3) +
  theme_recruit() +
  scale_color_manual(values=sp.col) +
  scale_fill_manual(values = sp.col) +
  ylim(0,8) +
  ylab("Age ratio")

R.agwt <- data.frame(cbind(Year = 1992:2020, R.mean = c(agwt.ipm$mean$R, agwt.ipm$mean$R), R.lower = c(agwt.ipm$q2.5$R, agwt.ipm$q2.5$R), R.upper = c(agwt.ipm$q97.5$R, agwt.ipm$q97.5$R)))

R.agwt <- R.agwt %>% 
  mutate_at(c('R.mean', 'R.lower', 'R.upper'), as.numeric)

R.agwt.plot <- ggplot(R.agwt, aes(x = Year, y = R.mean)) +
  geom_line(size = 0.5, color = sp.col[1]) +
  geom_ribbon(aes(ymin = R.lower, ymax = R.upper),fill = sp.col[1], alpha = 0.3) +
  add_phylopic(img = agwt.img, color = "black", x = 26, y =5, ysize =2) +
  theme_recruit() +
  ylim(0,6) +
  ylab("Age ratio")

R.mall <- data.frame(cbind(Year = 2005:2020, R.mean = c(mall.ipm$mean$R, mall.ipm$mean$R), R.lower = c(mall.ipm$q2.5$R, mall.ipm$q2.5$R), R.upper = c(mall.ipm$q97.5$R, mall.ipm$q97.5$R)))

R.mall <- R.mall %>% 
  mutate_at(c('R.mean', 'R.lower', 'R.upper'), as.numeric)

R.mall.plot <- ggplot(R.mall, aes(x = Year, y = R.mean)) +
  add_phylopic(img = mall.img, color = "black", x = 14, y = 1, ysize = 2) +
  #add_phylopic(img = mall.img, color = "black", x = 15, y = 0.4, ysize = 1.5) +
  geom_line(size = 0.5, color = sp.col[2]) +
  geom_ribbon(aes(ymin = R.lower, ymax = R.upper),fill = sp.col[2], alpha = 0.3) +
  theme_recruit() +
  ylim(0,2) +
  ylab("Age ratio")
R.mall.plot / R.agwt.plot + plot_layout(guides = "collect", widths = 1, heights = unit(c(2, 2), 'cm')) & theme(legend.position = 'bottom')

ggsave("figures/age_ratio_new_both.jpg", units="cm", width=8, height=7, dpi=600)

# vulnerability

v.out <- data.frame(cbind(Year = 1992:2020, Species = rep(c("Mallard", "Green-winged Teal"), each = length(agwt.ipm$mean$v)), v.mean = c(rep(NA, 13),mall.ipm$mean$v, agwt.ipm$mean$v), v.lower = c(rep(NA, 13),mall.ipm$q2.5$v, agwt.ipm$q2.5$v), v.upper = c(rep(NA, 13),mall.ipm$q97.5$v, agwt.ipm$q97.5$v)))


v.out <- v.out %>% 
  mutate_at(c('v.mean', 'v.lower', 'v.upper'), as.numeric)

v.agwt <- data.frame(cbind(Year = 1992:2020, v.mean = agwt.ipm$mean$v, v.lower = agwt.ipm$q2.5$v, v.upper = agwt.ipm$q97.5$v))


v.agwt <- v.agwt %>% 
  mutate_at(c('v.mean', 'v.lower', 'v.upper'), as.numeric)

ggplot(v.out, aes(x = Year, y = v.mean, group = Species, fill = Species)) +
  add_phylopic(img = agwt.img, color = "black", x = 27, y = 0.3, ysize = 1.7) +
  add_phylopic(img = mall.img, color = "black", x = 27, y = 3.5, ysize = 1.5) +
  geom_line(aes(color = Species), linewidth = 0.5) +
  geom_ribbon(aes(ymin = v.lower, ymax = v.upper), alpha = 0.3) +
  theme_recruit() +
  scale_color_manual(values=sp.col) +
  scale_fill_manual(values = sp.col) +
  ylim(0,6) +
  ylab("Vulnerability")

ggsave("figures/vulnerability_new_both.jpg", units="cm", width=8, height=7, dpi=600)


agwt.v.plot <- ggplot(v.agwt, aes(x = Year, y = v.mean)) +
  # add_phylopic(img = mall.img, color = "black", x = 15, y = 3.5, ysize = 1.5) +
  geom_line(linewidth = 0.5, color = sp.col[1]) +
  geom_ribbon(aes(ymin = v.lower, ymax = v.upper), fill = sp.col[1], alpha = 0.3) +
  add_phylopic(img = agwt.img, color = "black", x = 15, y = 0.5, ysize = 1.7) +
  theme_recruit() +
  ylim(0,4) +
  ylab("Vulnerability")

ggsave("figures/agwt_vulnerability_new_1992_2020.jpg", units="cm", width=8, height=7, dpi=600)

# overall population (bpop)
Bpop.all <- data.frame(cbind(Year = 1992:2020, Species = rep(c("Mallard", "Green-winged Teal"), each = length(agwt.ipm$mean$N_tot)), Bpop.all.mean = c(rep(NA, 13), mall.ipm$mean$N_tot, agwt.ipm$mean$N_tot), Bpop.all.lower = c(rep(NA, 13),mall.ipm$q2.5$N_tot, agwt.ipm$q2.5$N_tot), Bpop.all.upper = c(rep(NA, 13),mall.ipm$q97.5$N_tot, agwt.ipm$q97.5$N_tot)))

Bpop.all <- Bpop.all %>% 
  mutate_at(c('Bpop.all.mean', 'Bpop.all.lower', 'Bpop.all.upper'), as.numeric)

ggplot(Bpop.all, aes(x = Year, y = Bpop.all.mean,group = Species, fill = Species)) +
  add_phylopic(img = mall.img, color = "black", x = 24, y = 1400, ysize = 130) +
  add_phylopic(img = agwt.img, color = "black", x = 27, y = 150, ysize = 160) +
  geom_line(aes(color = Species), linewidth = 0.5) +
  geom_ribbon(aes(ymin = Bpop.all.lower, ymax = Bpop.all.upper), alpha = 0.5) +
  theme_recruit()+
  scale_color_manual(values=sp.col) +
  scale_fill_manual(values = sp.col) +
  ylab("Population index (10,000s)")

ggsave("figures/population_size_new_both.jpg", units="cm", width=8, height=7, dpi=600)

Bpop.agwt <- data.frame(cbind(Year = 1992:2020, Bpop.all.mean = agwt.ipm$mean$N_tot, Bpop.all.lower = agwt.ipm$q2.5$N_tot, Bpop.all.upper = agwt.ipm$q97.5$N_tot))

Bpop.agwt <- Bpop.agwt %>% 
  mutate_at(c('Bpop.all.mean', 'Bpop.all.lower', 'Bpop.all.upper'), as.numeric)

ggplot(Bpop.agwt, aes(x = Year, y = Bpop.all.mean)) +
  geom_line(color = sp.col[1], linewidth = 0.5) +
  geom_ribbon(aes(ymin = Bpop.all.lower, ymax = Bpop.all.upper), fill = sp.col[1], alpha = 0.5) +
  theme_recruit()+
  ylab("Population index (10,000s)")

ggsave("figures/agwt_population_size_new_1992_2020.jpg", units="cm", width=8, height=7, dpi=600)


# Plotting population by age-sex class
mall.Bpop.out <- data.frame(cbind(Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(mall.ipm$mean$N_AHY_fem)), Year = rep(2005:2020, 4), Bpop.mean = c(mall.ipm$mean$N_HY_mal, mall.ipm$mean$N_HY_fem, mall.ipm$mean$N_AHY_mal, mall.ipm$mean$N_AHY_fem), Bpop.lower = c(mall.ipm$q2.5$N_HY_mal, mall.ipm$q2.5$N_HY_fem, mall.ipm$q2.5$N_AHY_mal, mall.ipm$q2.5$N_AHY_fem), Bpop.upper = c(mall.ipm$q97.5$N_HY_mal, mall.ipm$q97.5$N_HY_fem, mall.ipm$q97.5$N_AHY_mal, mall.ipm$q97.5$N_AHY_fem)))

mall.Bpop.out <- mall.Bpop.out %>% 
                    mutate_at(c("Bpop.mean", "Bpop.lower", "Bpop.upper"), as.numeric)

mall.Bpop.plot <- ggplot(mall.Bpop.out, aes(x = Year, y = Bpop.mean, group = Class)) +
  #add_phylopic(img = agwt.img, color = "black", x = 5.5, y = 500, ysize = 100) +
  geom_line(aes(color = Class)) +
  geom_ribbon(aes(ymin = Bpop.lower, ymax = Bpop.upper, fill = Class ), alpha = 0.5)
  #theme_recruit()#+
  #scale_x_continuous(breaks = c(1992:2020))

agwt.Bpop.out <- data.frame(cbind(Class = rep(c("Juvenile Male", "Juvenile Female", "Adult Male", "Adult Female"), each = length(agwt.ipm$mean$N_AHY_fem)), Year = rep(1992:2020, 4), Bpop.mean = c(agwt.ipm$mean$N_HY_mal, agwt.ipm$mean$N_HY_fem, agwt.ipm$mean$N_AHY_mal, agwt.ipm$mean$N_AHY_fem), Bpop.lower = c(agwt.ipm$q2.5$N_HY_mal, agwt.ipm$q2.5$N_HY_fem, agwt.ipm$q2.5$N_AHY_mal, agwt.ipm$q2.5$N_AHY_fem), Bpop.upper = c(agwt.ipm$q97.5$N_HY_mal, agwt.ipm$q97.5$N_HY_fem, agwt.ipm$q97.5$N_AHY_mal, agwt.ipm$q97.5$N_AHY_fem)))

agwt.Bpop.out <- agwt.Bpop.out %>% 
  mutate_at(c("Bpop.mean", "Bpop.lower", "Bpop.upper"), as.numeric)

agwt.Bpop.plot <- ggplot(agwt.Bpop.out, aes(x = Year, y = Bpop.mean, group = Class)) +
  #add_phylopic(img = agwt.img, color = "black", x = 5.5, y = 500, ysize = 100) +
  geom_line(aes(color = Class)) +
  geom_ribbon(aes(ymin = Bpop.lower, ymax = Bpop.upper, fill = Class ), alpha = 0.5) +
  theme_recruit()


## Plotting environmental covariate effects

theme_cov <- function(){ theme(
  axis.text.x = element_text(size = 6),
  axis.text.y = element_text(size = 6),
  axis.title= element_text(size = 6),
  plot.title = element_text(size=8, hjust = 0.5),
  plot.margin = margin(0,0,0,0),
  text = element_text(size = 6),
  panel.background = element_blank(),
  panel.border = element_blank(),
  axis.line = element_line(colour = "black"),
  legend.position = "bottom",
  legend.key.size = unit(0.3, "cm")
)
}

# covariate effects on fall/winter survival plot
# alpha.nao <- mall.ipm$sims.list$alpha_nao %>%
#   as.data.frame() %>% 
#   rename("Juvenile Male" = V1, "Juvenile Female" = V2, "Adult Male" = V3, "Adult Female" = V4) %>% # double check the order. This might be wrong!
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

alpha.prcp <- mall.ipm$sims.list$alpha_prcp %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

alpha.dx32 <- mall.ipm$sims.list$alpha_dx32 %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

# alpha.nao <- mall.ipm$sims.list$alpha_nao %>%
#   as.data.frame() %>% 
#   rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

alpha.all <- bind_rows(alpha.prcp, alpha.dx32) %>% 
  mutate(Covariate = rep(c("Precipitation", "dx32"), each = nrow(alpha.prcp)))

alpha.plot <- ggplot(alpha.all, aes(x = Covariate_effect, y = Covariate, fill = Class)) +
  stat_halfeye(interval_size_range = c(0.25, 0.45), position = "dodge")+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  scale_fill_manual(values=cbbPalette) +
  annotate("text", x=-1.15, y=2.5, label= "A") +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
  # annotate("rect", xmin = -Inf, xmax = Inf, ymin = 1.5, ymax = 2.5,
  #          alpha = .2,fill = "gray") +
  ggtitle("Fall-Winter Survival") +
  xlim(-1.2, 1.2) 

#ggsave("cov_effects_fall_winter_sur_v1.jpg", units="cm", width=8, height=7, dpi=600)

# covariate effects on spring/summer survival plot
# gamma.nao <- mall.ipm$sims.list$gamma_nao %>%
#   as.data.frame() %>% 
#   rename("Juvenile Male" = V1, "Juvenile Female" = V2, "Adult Male" = V3, "Adult Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

gamma.prcp <- mall.ipm$sims.list$gamma_prcp %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

gamma.dx32 <- mall.ipm$sims.list$gamma_dx32 %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

# gamma.nao <- mall.ipm$sims.list$gamma_nao %>%
#   as.data.frame() %>% 
#   rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

gamma.all <- bind_rows(gamma.prcp, gamma.dx32) %>% 
  mutate(Covariate = rep(c("Precipitation", "dx32"), each = nrow(gamma.prcp)))
  
gamma.plot <- ggplot(gamma.all, aes(x = Covariate_effect, y = Covariate, fill = Class)) +
  stat_halfeye(interval_size_range = c(0.25, 0.45), position = "dodge")+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  scale_fill_manual(values=cbbPalette) +
  annotate("text", x=-1.2, y=2.5, label= "B") +
  # annotate("rect", xmin = -Inf, xmax = Inf, ymin = 1.6, ymax = 2.6,
  #           alpha = .2,fill = "gray") +
  annotate("text", x = c(1.2,0.3), y=c(1.4, 2.4), label= "*") +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
    ggtitle("Spring-Summer Survival") +
  xlim(-1.2, 1.5) #+
  #ylim(0, 2.5)

alpha.plot + gamma.plot + plot_layout(guides = "collect") & theme(legend.position = 'bottom')

ggsave("figures/cov_effects_surv_mallard_new_2005_2020.jpg", units="cm", width=10, height=7, dpi=600)

# covariate effects on productivity plot
mall.beta.prcp <- mall.ipm$sims.list$beta_prcp %>%
  as.data.frame()

mall.beta.dx32 <-  mall.ipm$sims.list$beta_dx32 %>%
  as.data.frame()


mall.beta.pond <-  mall.ipm$sims.list$beta_pond %>%
  as.data.frame()

# mall.beta.nao <-  mall.ipm$sims.list$beta_nao %>%
#   as.data.frame()

mall.beta.all <- bind_rows(mall.beta.prcp, mall.beta.dx32, mall.beta.pond) %>% 
            rename("Covariate_effect" = ".") %>% 
            mutate(Covariate = rep(c("Precipitation", "dx32", "Pond"), each = nrow(mall.beta.prcp)))
  
mall.beta.plot <- ggplot(mall.beta.all, aes(x = Covariate_effect, y = Covariate)) +
  stat_halfeye(fill = "dodgerblue2", interval_size_range = c(0.25, 0.45), position = "dodge")+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  annotate("text", x = -0.45, y = 3.8, label= "A") +
  annotate("text", x = 0.5, y = 3, label = "*") +
  xlim(-0.45, 0.6) +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
  ggtitle("Mallard")

# combine all plots
(alpha.plot + gamma.plot)/mall.beta.plot +  plot_layout(guides = "collect", widths = 1.5, heights = unit(c(6, 3), 'cm')) & theme(legend.position = 'bottom')

ggsave("figures/cov_effect_prod_mall_new_2005_2020.jpg",  units="cm", width=12, height=12, dpi=600)

# proportion of posterior distribution greater than 0
mall.alpha.prcp <- mall.ipm$sims.list$alpha_prcp
mall.alpha.dx32 <- mall.ipm$sims.list$alpha_dx32
# mall.alpha.nao <- mall.ipm$sims.list$alpha_nao
mall.gamma.prcp <- mall.ipm$sims.list$gamma_prcp
mall.gamma.dx32 <- mall.ipm$sims.list$gamma_dx32
# mall.gamma.nao <- mall.ipm$sims.list$gamma_nao
mall.beta.prcp <- mall.ipm$sims.list$beta_prcp
mall.beta.dx32 <- mall.ipm$sims.list$beta_dx32
# mall.beta.nao <- mall.ipm$sims.list$beta_nao
mall.beta.pond <- mall.ipm$sims.list$beta_pond

1-apply(mall.alpha.prcp, 2, function(c) ecdf(c)(0))
1-apply(mall.alpha.dx32, 2, function(c) ecdf(c)(0))
# 1-apply(mall.alpha.nao, 2, function(c) ecdf(c)(0))
1-apply(mall.gamma.prcp, 2, function(c) ecdf(c)(0))
1-apply(mall.gamma.dx32, 2, function(c) ecdf(c)(0))
# 1-apply(mall.gamma.nao, 2, function(c) ecdf(c)(0))

prob.less.0 <- ecdf(mall.beta.pond)
prob.greater.0 <- 1-prob.less.0(0)
prob.less.0 <- ecdf(mall.beta.prcp)
prob.greater.0 <- 1-prob.less.0(0)
prob.less.0 <- ecdf(mall.beta.dx32)
prob.greater.0 <- 1-prob.less.0(0)
# prob.less.0 <- ecdf(mall.beta.nao)
# prob.greater.0 <- 1-prob.less.0(0)

##### AGWT cov plot
# covariate effects on fall/winter survival plot
# agwt.alpha.nao <- agwt.ipm$sims.list$alpha_nao %>%
#   as.data.frame() %>% 
#   rename("Juvenile Male" = V1, "Juvenile Female" = V2, "Adult Male" = V3, "Adult Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.alpha.prcp <- agwt.ipm$sims.list$alpha_prcp %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.alpha.dx32 <- agwt.ipm$sims.list$alpha_dx32 %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

# agwt.alpha.nao <- agwt.ipm$sims.list$alpha_nao %>%
#   as.data.frame() %>% 
#   rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.alpha.all <- bind_rows(agwt.alpha.prcp, agwt.alpha.dx32) %>% 
  mutate(Covariate = rep(c("Precipitation", "dx32"), each = nrow(agwt.alpha.prcp)))

agwt.alpha.plot <- ggplot(agwt.alpha.all, aes(x = Covariate_effect, y = Covariate, fill = Class)) +
  stat_halfeye(interval_size_range = c(0.25, 0.45), position = "dodge")+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  scale_fill_manual(values=cbbPalette) +
  annotate("text", x = -1.2, y = 2.5, label= "A") +
  # annotate("rect", xmin = -Inf, xmax = Inf, ymin = 1.6, ymax = 2.6,
  #          alpha = .2,fill = "gray") +
  # annotate("text", x = 0.3, y = c(2.125,2.35), label = "*") +
  ggtitle("Fall-Winter Survival") +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
  xlim(-1.2, 1.2) 

# covariate effects on spring/summer survival plot
# agwt.gamma.nao <- agwt.ipm$sims.list$gamma_nao %>%
#   as.data.frame() %>% 
#   rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Female" = V3) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.gamma.prcp <- agwt.ipm$sims.list$gamma_prcp %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.gamma.dx32 <- agwt.ipm$sims.list$gamma_dx32 %>%
  as.data.frame() %>% 
  rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

# agwt.gamma.nao <- agwt.ipm$sims.list$gamma_nao %>%
#   as.data.frame() %>% 
#   rename("Adult Male" = V1, "Adult Female" = V2, "Juvenile Male" = V3, "Juvenile Female" = V4) %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "Covariate_effect")

agwt.gamma.all <- bind_rows(agwt.gamma.prcp, agwt.gamma.dx32) %>% 
  mutate(Covariate = rep(c("Precipitation", "dx32"), each = nrow(agwt.gamma.prcp)))

agwt.gamma.plot <- ggplot(agwt.gamma.all, aes(x = Covariate_effect, y = Covariate, fill = Class)) +
  stat_halfeye(interval_size_range = c(0.25, 0.45), position = "dodge")+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  scale_fill_manual(values=cbbPalette) +
  annotate("text", x= -1.2, y=2.5, label= "B") +
  # annotate("rect", xmin = -Inf, xmax = Inf, ymin = 1.5, ymax = 2.5,
  #         alpha = .2,fill = "gray") +
  ggtitle("Spring-Summer Survival") +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
  
  xlim(-1.2, 1.2) 


agwt.alpha.plot + agwt.gamma.plot + plot_layout(guides = "collect") & theme(legend.position = 'bottom')

ggsave("figures/cov_effects_surv_agwt_new_1992_2020.jpg", units="cm", width=10, height=7, dpi=600)

# covariate effects on productivity plot
agwt.beta.prcp <- agwt.ipm$sims.list$beta_prcp %>%
  as.data.frame()

agwt.beta.dx32 <-  agwt.ipm$sims.list$beta_dx32 %>%
  as.data.frame()

# agwt.beta.nao <-  agwt.ipm$sims.list$beta_nao %>%
#   as.data.frame()

agwt.beta.pond <-  agwt.ipm$sims.list$beta_pond %>%
  as.data.frame()

agwt.beta.all <- bind_rows(agwt.beta.prcp, agwt.beta.dx32, agwt.beta.pond) %>% 
  rename("Covariate_effect" = ".") %>% 
  mutate(Covariate = rep(c("Precipitation", "dx32", "Pond"), each = nrow(agwt.beta.prcp)))

agwt.beta.plot <- ggplot(agwt.beta.all, aes(x = Covariate_effect, y = Covariate)) +
  stat_halfeye(fill = "dodgerblue2", interval_size_range = c(0.25, 0.45))+
  theme_cov() +
  geom_vline(xintercept = 0, linetype="dashed", color = "black", linewidth=0.3) +
  annotate("text", x = -0.5, y = 3.7, label= "B") +
  # annotate("text", x = 0.6, y = 3, label = "*") +
  xlim(-0.5, 0.7) +
  labs(x = "Covariate effect estimate", y = "Environmetnal covariate") +
  ggtitle("Green-winged teal") 

mall.beta.plot + agwt.beta.plot + plot_layout(guides = "collect")

ggsave("figures/cov_effects_prod_both.jpg",  units="cm", width=10, height=5, dpi=600)


agwt.alpha.prcp <- agwt.ipm$sims.list$alpha_prcp
agwt.alpha.dx32 <- agwt.ipm$sims.list$alpha_dx32
# agwt.alpha.nao <- agwt.ipm$sims.list$alpha_nao
agwt.gamma.prcp <- agwt.ipm$sims.list$gamma_prcp
agwt.gamma.dx32 <- agwt.ipm$sims.list$gamma_dx32
# agwt.gamma.nao <- agwt.ipm$sims.list$gamma_nao
agwt.beta.prcp <- agwt.ipm$sims.list$beta_prcp
agwt.beta.dx32 <- agwt.ipm$sims.list$beta_dx32
# agwt.beta.nao <- agwt.ipm$sims.list$beta_nao
agwt.beta.pond <- agwt.ipm$sims.list$beta_pond

1-apply(agwt.alpha.prcp, 2, function(c) ecdf(c)(0))
1-apply(agwt.alpha.dx32, 2, function(c) ecdf(c)(0))
# 1-apply(agwt.alpha.nao, 2, function(c) ecdf(c)(0))
1-apply(agwt.gamma.prcp, 2, function(c) ecdf(c)(0))
1-apply(agwt.gamma.dx32, 2, function(c) ecdf(c)(0))
# 1-apply(agwt.gamma.nao, 2, function(c) ecdf(c)(0))

prob.less.0 <- ecdf(agwt.beta.pond)
(prob.greater.0 <- 1-prob.less.0(0))
prob.less.0 <- ecdf(agwt.beta.prcp)
(prob.greater.0 <- 1-prob.less.0(0))
prob.less.0 <- ecdf(agwt.beta.dx32)
(prob.greater.0 <- 1-prob.less.0(0))
prob.less.0 <- ecdf(agwt.beta.nao)
(prob.greater.0 <- 1-prob.less.0(0))

######################################### Scratch ####################################


############################

# lambda <- expression(((N_HY_fem + N_AHY_fem)*R*SH.jm*(SN.jm^0.25) + (N_HY_fem + N_AHY_fem)*R*SH.jf*(SN.jf^0.25) + (N_HY_mal + N_AHY_mal)*SH.am*SN.am + (N_HY_fem + N_AHY_fem)*SH.af*SN.af)/(N_HY_fem+N_AHY_fem+N_HY_mal+N_AHY_mal))
# 
# D(lambda, "R")
# 
# # Calculate proportional population sizes
# n.years <- length(mall.ipm.cov$mean$muH.am)
# n.hy.mal <- draws$N_HY_mal[, 1:n.years] / draws$N_tot[, 1:n.years]
# n.ahy.mal <- draws$N_AHY_mal[, 1:n.years] / draws$N_tot[, 1:n.years]
# n.hy.fem <- draws$N_HY_fem[, 1:n.years] / draws$N_tot[, 1:n.years]
# n.ahy.fem <- draws$N_AHY_fem[, 1:n.years] / draws$N_tot[, 1:n.years]
# 
# 
# # Extract the mean demographic rates and population sizes and store them in a list
# mu <- list(muH.am=draws$muH.am, muN.am=draws$muN.am, muH.af=draws$muH.af, muN.af=draws$muN.af, muH.jm=draws$muH.jm, muN.jm=draws$muN.jm, muH.jf=draws$muH.jf, muN.jf=draws$muN.jf, R=draws$R, N.HY.fem = draws$N_HY_fem, N.AHY.fem = draws$N_AHY_fem, N.HY.mal = draws$N_HY_mal, N.AHY.mal = draws$N_AHY_mal)
# 
# # Calculate sensitivities
# sens <- matrix(NA, n.draws, length(mu))
# colnames(sens) <- c("muH.am", "muN.am", "muH.af", "muN.af", "f2", "n1", "n2", "n3")
# sens[,"phij"] <- eval(D(lambda, "phij"), envir=mu)
# sens[,"phia"] <- eval(D(lambda, "phia"), envir=mu)
# sens[,"om"] <- eval(D(lambda, "om"), envir=mu)
# sens[,"f1"] <- eval(D(lambda, "f1"), envir=mu)
# sens[,"f2"] <- eval(D(lambda, "f2"), envir=mu)
# sens[,"n1"] <- eval(D(lambda, "n1"), envir=mu)
# sens[,"n2"] <- eval(D(lambda, "n2"), envir=mu)
# sens[,"n3"] <- eval(D(lambda, "n3"), envir=mu)
# 
# #The final step is the calculation of the contribution of realized temporal process (co)variation of the demographic rates and of population structure to the temporal variation of realized population growth rates.
# 
# # Define matrix to store results
# cont <- matrix(NA, nrow=n.draws, ncol=8)
# colnames(cont) <- c("phij", "phia", "om", "f1", "f2", "n1", "n2", "n3")
# # Calculate contributions for each demographic rate and stage-structured population size at each MCMC draw
# for (s in 1:n.draws){
#   dp_stoch <- cbind(draws$phij[s,], draws$phia[s,], draws$omega[s,], draws$f1[s,1:n.years], draws$f2[s,1:n.years], n1[s,], n2[s,], n3[s,])
#   
#   # Derive process variance and covariance among demographic parameters using shrunk estimates of
#   # demographic rates and proportional pop. sizes
#   dp_varcov <- var(dp_stoch)
#   sensvec <- sens[s, ]
#   # Calculate demographic contributions
#   contmatrix <- dp_varcov * outer(sensvec, sensvec)
#   cont[s, ] <- rowSums(contmatrix)
# }


###########################################

# Compute differences and means of demographic rates and population structure between successive years
n.years <- length(mall.ipm.cov$mean$SH.am)
diff <- array(NA, dim=c(n.draws, n.years-1, 13))
draws <- mall.ipm.cov$sims.list # Dig out MCMC samples
n.draws <- mall.ipm.cov$mcmc.info$n.samples # Determine number of MCMC draws
dimnames(diff)[[3]] <- c("SH.am", "SN.am", "SH.af", "SN.af", "SH.jm", "SN.jm", "SH.jf", "SN.jf", "R", "N_HY_fem", "N_AHY_fem", "N_HY_mal", "N_AHY_mal")

# Function to compute differences over successive time steps
getDiff <- function(x) x[,2:n.years] - x[,1:(n.years-1)]
diff[,,"SH.am"] <- getDiff(draws$SH.am)
diff[,,"SN.am"] <- getDiff(draws$SN.am)
diff[,,"SH.af"] <- getDiff(draws$SH.af)
diff[,,"SN.af"] <- getDiff(draws$SN.af)
diff[,,"SH.jm"] <- getDiff(draws$SH.jm)
diff[,,"SN.jm"] <- getDiff(draws$SN.jm)
diff[,,"SH.jf"] <- getDiff(draws$SH.jf)
diff[,,"SN.jf"] <- getDiff(draws$SN.jf)
diff[,,"R"] <- getDiff(draws$R)
diff[,,"N_HY_fem"] <- getDiff(draws$N_HY_fem)
diff[,,"N_AHY_fem"] <- getDiff(draws$N_AHY_fem)
diff[,,"N_HY_mal"] <- getDiff(draws$N_HY_mal)
diff[,,"N_AHY_mal"] <- getDiff(draws$N_AHY_mal)
diff.lambda <- getDiff(draws$lambda)
mean.diff.lambda <- apply(diff.lambda, 2, mean)
mean.diff.lambda <- mean.diff.lambda %>% 
  as.data.frame() %>% 
  mutate(Year = c(1993:2019)) %>% 
  pivot_longer(!Year, values_to = "lambda")

ggplot(mean.diff.lambda, aes(x = Year, y = lambda)) +
  geom_bar(stat = "identity") +
  ylim(-0.4, 0.4)

# Function to compute means over successive time steps, store them in a list
getMn <- function(x) (x[,2:n.years] + x[,1:(n.years-1)]) / 2
means <- list(SH.am=getMn(draws$SH.am), SN.am=getMn(draws$SN.am), SH.af=getMn(draws$SH.af), SN.af = getMn(draws$SN.af), SH.jm=getMn(draws$SH.jm), SN.jm=getMn(draws$SN.jm), SH.jf=getMn(draws$SH.jf), SN.jf=getMn(draws$SN.jf), R=getMn(draws$R), N_HY_fem = getMn(draws$N_HY_fem), N_AHY_fem = getMn(draws$N_AHY_fem), N_HY_mal = getMn(draws$N_HY_mal), N_AHY_mal = getMn(draws$N_AHY_mal))


# Compute sensitivities
senss <- array(NA, dim=c(n.draws, n.years-1, 13))
dimnames(senss)[[3]] <- c("SH.am", "SN.am", "SH.af", "SN.af", "SH.jm", "SN.jm", "SH.jf", "SN.jf", "R", "N_HY_fem", "N_AHY_fem", "N_HY_mal", "N_AHY_mal")
senss[,,"SH.am"] <- eval(D(lambda, "SH.am"), envir=means)
senss[,,"SN.am"] <- eval(D(lambda, "SN.am"), envir=means)
senss[,,"SH.af"] <- eval(D(lambda, "SH.af"), envir=means)
senss[,,"SN.af"] <- eval(D(lambda, "SN.af"), envir=means)
senss[,,"SH.jm"] <- eval(D(lambda, "SH.jm"), envir=means)
senss[,,"SN.jm"] <- eval(D(lambda, "SN.jm"), envir=means)
senss[,,"SH.jf"] <- eval(D(lambda, "SH.jf"), envir=means)
senss[,,"SN.jf"] <- eval(D(lambda, "SN.jf"), envir=means)
senss[,,"R"] <- eval(D(lambda, "R"), envir=means)
senss[,,"N_HY_fem"] <- eval(D(lambda, "N_HY_fem"), envir=means)
senss[,,"N_AHY_fem"] <- eval(D(lambda, "N_AHY_fem"), envir=means)
senss[,,"N_HY_mal"] <- eval(D(lambda, "N_HY_mal"), envir=means)
senss[,,"N_AHY_mal"] <- eval(D(lambda, "N_AHY_mal"), envir=means)

conts <- diff*senss

mean.conts <- apply(conts, c(2,3), mean)
mean.conts <- mean.conts %>% 
  as.data.frame() %>% 
  select(SH.am:R) %>% 
  mutate(Year = c(1993:2019)) %>% 
  pivot_longer(!Year, names_to = "Param", values_to = "Contribution")

ggplot(mean.conts, aes(x = Year, y = Contribution, fill = Param))+
  geom_bar(stat = "identity", size = 1) +
  scale_fill_brewer(palette = "Paired") +
  
  #scale_color_manual(values = c(NA, 'red'), guide="none") +
  ylim(-0.4, 0.4)


#sig.t~dgamma(150, 1), N_HY_mal~rnorm(100,0.0016), N_HY_fem~rnorm(100,0.0016), N_AHY_mal~rnorm(125,0.0016), N_AHY_fem~rnorm(125,0.0016)
mall.ipm.2 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
saveRDS(mall.ipm.2, "mall_ipm_sig_t_150.rda")

#sig.t~dgamma(100, 1), N_HY_mal~rnorm(100,0.0016), N_HY_fem~rnorm(100,0.0016), N_AHY_mal~rnorm(125,0.0016), N_AHY_fem~rnorm(125,0.0016)
mall.ipm.3 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
saveRDS(mall.ipm.3, "mall_ipm_sig_t_100.rda")

#sig.t~dgamma(50, 1), N_HY_mal~rnorm(100,0.0016), N_HY_fem~rnorm(100,0.0016), N_AHY_mal~rnorm(125,0.0016), N_AHY_fem~rnorm(125,0.0016)
mall.ipm.4 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
saveRDS(mall.ipm.4, "mall_ipm_sig_t_50.rda")

#sig.t~dgamma(25, 1), N_HY_mal~rnorm(100,0.0016), N_HY_fem~rnorm(100,0.0016), N_AHY_mal~rnorm(125,0.0016), N_AHY_fem~rnorm(125,0.0016)
mall.ipm.5 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
saveRDS(mall.ipm.5, "mall_ipm_sig_t_25.rda")


#sig.t~dgamma(50, 1), N_HY_mal~rnorm(100,0.0016), N_HY_fem~rnorm(100,0.0016), N_AHY_mal~rnorm(125,0.0016), N_AHY_fem~rnorm(125,0.0016), age ratio (R) multiplied by 0.5
mall.ipm.6 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.6, "mall_ipm_sig_t_50_Rhalf.rda")

#sig.t~dgamma(50, 1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5
mall.ipm.7 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)
saveRDS(mall.ipm.7, "mall_ipm_sig_t_50_R0.rda")

#sig.t~dgamma(50, 1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS multiplied by 0.5
mall.ipm.8 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)


#sig.t~dgamma(25, 1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS multiplied by 0.5
mall.ipm.9 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)


#sig.t~dgamma(300, 1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5
mall.ipm.10 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

saveRDS(mall.ipm.10, "mall_ipm_sig_t_300_R0.rda")



#sig.t~dgamma(50, 1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5. SN.jm and SN.jf are not raised to 0.25
mall.ipm.11 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

#sig.t~dgamma(50, 1), delta~dgamma(200,1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5.
mall.ipm.12 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

#sig.t~dgamma(50, 1), delta~dgamma(100,1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5.
mall.ipm.13 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)


#sig.t~dgamma(50, 1), delta~dgamma(100,1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5.
mall.ipm.14 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

#sig.t~dgamma(50, 1), delta~dgamma(100,1), N_HY_mal~rnorm(600*0.44*0.5,0.0016), N_HY_fem~rnorm(600*0.44*0.5,0.0016), N_AHY_mal~rnorm(600*0.56*0.67,0.0016), N_AHY_fem~rnorm(600*0.56*0.33,0.0016), age ratio (R) IS NOT multiplied by 0.5. S_Juv removed
mall.ipm.15 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

mall.ipm.16 <- jagsUI(bugs.data, inits=inits, parameters, "MALL_IPM.jags", n.adapt = na, n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb, parallel=TRUE, store.data=TRUE)

sig.t <- c(mall.ipm$mean$sig.t, mall.ipm.2$mean$sig.t, mall.ipm.3$mean$sig.t, mall.ipm.4$mean$sig.t, mall.ipm.5$mean$sig.t, mall.ipm.6$mean$sig.t, mall.ipm.7$mean$sig.t, mall.ipm.8$mean$sig.t, mall.ipm.9$mean$sig.t)

delta <- c(mall.ipm$mean$delta, mall.ipm.2$mean$delta, mall.ipm.3$mean$delta, mall.ipm.4$mean$delta, mall.ipm.5$mean$delta, mall.ipm.6$mean$delta, mall.ipm.7$mean$delta, mall.ipm.8$mean$delta, mall.ipm.9$mean$delta)

S_juv <- c(mall.ipm$mean$S_juv, mall.ipm.2$mean$S_juv, mall.ipm.3$mean$S_juv, mall.ipm.4$mean$S_juv, mall.ipm.5$mean$S_juv, mall.ipm.6$mean$S_juv, mall.ipm.7$mean$S_juv, mall.ipm.8$mean$S_juv, mall.ipm.9$mean$S_juv)

R <- c(mall.ipm$mean$R, mall.ipm.2$mean$R, mall.ipm.3$mean$R, mall.ipm.4$mean$R, mall.ipm.5$mean$R, mall.ipm.6$mean$R, mall.ipm.7$mean$R, mall.ipm.8$mean$R, mall.ipm.9$mean$R)

v <- c(mall.ipm$mean$v, mall.ipm.2$mean$v, mall.ipm.3$mean$v, mall.ipm.4$mean$v, mall.ipm.5$mean$v, mall.ipm.6$mean$v, mall.ipm.7$mean$v, mall.ipm.8$mean$v, mall.ipm.9$mean$v)

q <- c(mall.ipm$mean$q, mall.ipm.2$mean$q, mall.ipm.3$mean$q, mall.ipm.4$mean$q, mall.ipm.5$mean$q, mall.ipm.6$mean$q, mall.ipm.7$mean$q, mall.ipm.8$mean$q, mall.ipm.9$mean$q)






# mall.cov.h.mean <- as.data.frame(rbind(mall.ipm.cov$mean$alpha_prcp, mall.ipm.cov$mean$alpha_dx32, mall.ipm.cov$mean$alpha_nao))
# 
# mall.cov.h.mean <- mall.cov.h.mean %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "mean") %>% 
#   mutate(Covariate = rep(c("Precipitation", "Mid-lat dx32", "NAO"), each = 4), .before = Class)
# 
# mall.cov.h.lower <- as.data.frame(rbind(mall.ipm.cov$q2.5$alpha_prcp, mall.ipm.cov$q2.5$alpha_dx32, mall.ipm.cov$q2.5$alpha_nao))
# 
# mall.cov.h.lower <- mall.cov.h.lower %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "lower")
# 
# mall.cov.h.upper <- as.data.frame(rbind(mall.ipm.cov$q97.5$alpha_prcp, mall.ipm.cov$q97.5$alpha_dx32, mall.ipm.cov$q97.5$alpha_nao))
# 
# mall.cov.h.upper <- mall.cov.h.upper %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "upper")
# 
# mall.cov.h.all <- cbind(mall.cov.h.mean, mall.cov.h.lower[,2], mall.cov.h.upper[,2])
# 
# mall.cov.h.all <- mall.cov.h.all %>% 
#   mutate(Class = case_when(Class == 'V1' ~ 'Adult male',
#                   Class == 'V2' ~ 'Adult female',
#                   Class == 'V3' ~ "Juvenile male",
#                   TRUE ~ "Juvenile female"))
# 
# mall.h.cov.plot <- ggplot(mall.cov.h.all, aes(x = Covariate, y = mean, color = Class)) +
#   geom_pointrange(aes(ymin = lower, ymax = upper), size = 1, linewidth = 1, position=position_dodge(width=0.7)) +  
#   theme_cov() +
#   scale_color_manual(values=cbbPalette) +
#   coord_flip() +
#   geom_hline(yintercept = 0, linetype="dashed", color = "grey", linewidth=0.75) +
#   ggtitle("Hunting survival")
#   
# mall.cov.ph.mean <- as.data.frame(rbind(mall.ipm.cov$mean$gamma_prcp, mall.ipm.cov$mean$gamma_dx32, mall.ipm.cov$mean$gamma_nao))
# 
# mall.cov.ph.mean <- mall.cov.ph.mean %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "mean") %>% 
#   mutate(Covariate = rep(c("Precipitation", "Mid-lat dx32", "NAO"), each = 4), .before = Class)
# 
# mall.cov.ph.lower <- as.data.frame(rbind(mall.ipm.cov$q2.5$gamma_prcp, mall.ipm.cov$q2.5$gamma_dx32, mall.ipm.cov$q2.5$gamma_nao))
# 
# mall.cov.ph.lower <- mall.cov.ph.lower %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "lower")
# 
# mall.cov.ph.upper <- as.data.frame(rbind(mall.ipm.cov$q97.5$gamma_prcp, mall.ipm.cov$q97.5$gamma_dx32, mall.ipm.cov$q97.5$gamma_nao))
# 
# mall.cov.ph.upper <- mall.cov.ph.upper %>% 
#   pivot_longer(everything(), names_to = "Class", values_to = "upper")
# 
# mall.cov.ph.all <- cbind(mall.cov.ph.mean, mall.cov.ph.lower[,2], mall.cov.ph.upper[,2])
# 
# mall.cov.ph.all <- mall.cov.ph.all %>% 
#   mutate(Class = case_when(Class == 'V1' ~ 'Adult male',
#                            Class == 'V2' ~ 'Adult female',
#                            Class == 'V3' ~ "Juvenile male",
#                            TRUE ~ "Juvenile female"))
# 
# mall.ph.cov.plot <- ggplot(mall.cov.ph.all, aes(x = Covariate, y = mean, color = Class)) +
#   geom_pointrange(aes(ymin = lower, ymax = upper), size = 1, linewidth = 1, position=position_dodge(width=0.7)) +  
#   theme_cov() +
#   scale_color_manual(values=cbbPalette) +
#   coord_flip() +
#   geom_hline(yintercept = 0, linetype="dashed", color = "grey", linewidth=0.75) +
#   ggtitle("Post-hunting survival")
# 
# 
# mall.R.cov <- as.data.frame(cbind(Covariate = c("Precipitation", "Mid-lat dx32", "Pond count"), mean = c(mall.ipm.cov$mean$beta_prcp, mall.ipm.cov$mean$beta_dx32, mall.ipm.cov$mean$beta_pond), lower = c(mall.ipm.cov$q2.5$beta_prcp, mall.ipm.cov$q2.5$beta_dx32, mall.ipm.cov$q2.5$beta_pond), upper = c(mall.ipm.cov$q97.5$beta_prcp, mall.ipm.cov$q97.5$beta_dx32, mall.ipm.cov$q97.5$beta_pond)))
# 
# mall.R.cov <- mall.R.cov %>% 
#   mutate_at(c('mean', 'lower', 'upper'), as.numeric)
# 
# mall.R.cov.plot <- ggplot(mall.R.cov, aes(x = Covariate, y = mean)) +
#   geom_pointrange(aes(ymin = lower, ymax = upper), color = "blue", size = 1, linewidth = 1) +  
#   theme_cov() +
#   coord_flip() +
#   geom_hline(yintercept = 0, linetype="dashed", color = "grey", linewidth=0.75) +
#   ggtitle("Age-ratio")
# 
# ggarrange(mall.h.cov.plot, mall.ph.cov.plot, mall.R.cov.plot, ncol=3, nrow=1, common.legend = TRUE, legend="bottom") + theme(plot.margin = margin(0.1,0.2,0.2,0.2, "cm")) 

###############################################
# violin plots
mall.prcp.out <- as.data.frame(mall.ipm.cov$sims.list$alpha_prcp)

mall.prcp.out <- mall.prcp.out %>%
  rename("Adult male" = "V1", "Adult female" = "V2", "Juvenile male" = "V3", "Juvenile female" = "V4") %>% 
  pivot_longer(everything(), names_to = "Class", values_to = "sample")

BCI <- as.data.frame(cbind(Class = c("Adult male", "Adult female", "Juvenile male", "Juvenile female"), mean = mall.ipm.cov$mean$alpha_prcp, lower = mall.ipm.cov$q2.5$alpha_prcp, upper = mall.ipm.cov$q97.5$alpha_prcp))
BCI$mean <- as.numeric(BCI$mean)
BCI$lower <- as.numeric(BCI$lower)
BCI$upper <- as.numeric(BCI$upper)

ggplot(data = mall.prcp.out, aes(x = Class, y = sample, fill = Class))+
  geom_violin() +
  stat_summary(fun.data=mean_sdl, 
               geom="pointrange", color="white") +
  geom_hline(yintercept = 0.0, linetype="dashed", color = "grey", linewidth=0.75) +
  scale_fill_manual(values=cbbPalette) +
  coord_flip()


mall.cov.out <- as.data.frame(cbind(param = rep(c("winter precipitation", "winter mid lat dx32", "NAO index"), each = length(mall.ipm.cov$sims.list$alpha_prcp)), sims = c(mall.ipm.cov$sims.list$alpha_prcp, mall.ipm.cov$sims.list$alpha_dx32, mall.ipm.cov$sims.list$alpha_nao)))